syntax = "proto3";
package deals.rpc;

option go_package = "github.com/textileio/powergate/deals/rpc";

message ListDealRecordsConfig {
    repeated string from_addrs = 1;
    repeated string data_cids = 2;
    bool include_pending = 3;
    bool include_final = 4;
    bool ascending = 5;
}

message StorageDealInfo {
	string proposal_cid = 1;
	uint64 state_id = 2;
	string state_name = 3;
	string miner = 4;

	string piece_cid = 5;
	uint64 size = 6;

	uint64 price_per_epoch = 7;
	uint64 start_epoch = 8;
	uint64 duration = 9;

	uint64 deal_id = 10;
	int64 activation_epoch = 11;
	string msg = 12;
}

message StorageDealRecord {
    string root_cid = 1;
    string addr = 2;
    int64 time = 3;
    bool pending = 4;
    StorageDealInfo deal_info = 5;
}

message RetrievalDealInfo {
	string root_cid = 1;
	uint64 size = 2;
	uint64 min_price = 3;
	uint64 payment_interval = 4;
	uint64 payment_interval_increase = 5;
	string miner = 6;
	string miner_peer_id = 7;
}

message RetrievalDealRecord {
    string addr = 1;
    int64 time = 2;
    RetrievalDealInfo deal_info = 3;
}

message StorageDealConfig {
	string miner = 1;
	uint64 epoch_price = 2;
}

message StoreResult {
	string proposal_cid = 1;
	StorageDealConfig config = 2;      
	bool success = 3;
	string message = 4;
}

message ImportParams {
    bool is_car = 1;
}

enum StorageDealStatus {
    STORAGE_DEAL_STATUS_UNSPECIFIED = 0;
	STORAGE_DEAL_STATUS_PROPOSAL_NOT_FOUND = 1;
	STORAGE_DEAL_STATUS_PROPOSAL_REJECTED = 2;
	STORAGE_DEAL_STATUS_PROPOSAL_ACCEPTED = 3;
	STORAGE_DEAL_STATUS_STAGED = 4;
	STORAGE_DEAL_STATUS_SEALING = 5;
	STORAGE_DEAL_STATUS_ACTIVE = 6;
	STORAGE_DEAL_STATUS_FAILING = 7;
	STORAGE_DEAL_STATUS_NOT_FOUND = 8;
}

message ImportRequest {
    oneof payload {
        ImportParams import_params = 1;
        bytes chunk = 2;
    }
}

message ImportResponse {
    string data_cid = 1;
    int64 size = 2;
}

message StoreRequest {
    string address = 1;
    string data_cid = 2;
    uint64 piece_size = 3;
    repeated StorageDealConfig storage_deal_configs = 4;
    uint64 min_duration = 5;
}

message StoreResponse {
    repeated StoreResult results = 1;
}

message FetchRequest {
    string address = 1;
    string cid = 2;
}

message FetchResponse {
}

message RetrieveRequest {
    string address = 1;
    string cid = 2;
    bool car_encoding = 3;
}

message RetrieveResponse {
    bytes chunk = 1;
}

message GetDealStatusRequest {
    string proposal_cid = 1;
}

 message GetDealStatusResponse {
    StorageDealStatus status = 1;
    bool slashed = 2;
 }

message WatchRequest {
    repeated string proposals = 1;
}

message WatchResponse {
    StorageDealInfo deal_info = 1;
}

message ListStorageDealRecordsRequest {
    ListDealRecordsConfig config = 1;
}

message ListStorageDealRecordsResponse {
    repeated StorageDealRecord records = 1;
}

message ListRetrievalDealRecordsRequest {
    ListDealRecordsConfig config = 1;
}

message ListRetrievalDealRecordsResponse {
    repeated RetrievalDealRecord records = 1;
}

service RPCService {
    rpc Import(stream ImportRequest) returns (ImportResponse) {}
    rpc Store(StoreRequest) returns (StoreResponse) {}
    rpc Fetch(FetchRequest) returns (FetchResponse) {}
    rpc Retrieve(RetrieveRequest) returns (stream RetrieveResponse) {}
    rpc GetDealStatus(GetDealStatusRequest) returns (GetDealStatusResponse) {}
    rpc Watch(WatchRequest) returns (stream WatchResponse) {}
    rpc ListStorageDealRecords(ListStorageDealRecordsRequest) returns (ListStorageDealRecordsResponse) {}
    rpc ListRetrievalDealRecords(ListRetrievalDealRecordsRequest) returns (ListRetrievalDealRecordsResponse) {}
}
